// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String  @db.MediumText
  type              String  @db.MediumText
  provider          String
  providerAccountId String
  refresh_token     String? @db.MediumText
  access_token      String? @db.MediumText
  expires_at        Int?
  token_type        String? @db.MediumText
  scope             String? @db.MediumText
  id_token          String? @db.MediumText
  session_state     String? @db.MediumText
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?   @db.MediumText
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("pupil")
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Teacher {
  id           String         @id @default(cuid())
  fName        String
  lName        String
  email        String
  Lesson       Lesson[]
  TasterLesson TasterLesson[]
  Instrument   Instrument?    @relation(fields: [instrumentId], references: [id])
  instrumentId String?

  @@index([instrumentId])
}

model Lesson {
  id           String       @id @default(cuid())
  teacherId    String
  teacher      Teacher      @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  pupils       Pupil[]
  ///start times are stored as minutes from midnight so 0 = 00:00, 60 = 01:00, 120 = 02:00 etc.
  startTime    Int
  ///end times are stored as minutes from midnight so 0 = 00:00, 60 = 01:00, 120 = 02:00 etc.
  endTime      Int
  instrument   Instrument   @relation(fields: [instrumentId], references: [id])
  instrumentId String
  day          Day          @relation(fields: [dayName], references: [name])
  dayName      String
  Attendance   Attendance[]

  @@index([dayName])
  @@index([teacherId])
  @@index([instrumentId])
}

model TasterLesson {
  id        String   @id @default(cuid())
  teacherId String?
  teacher   Teacher? @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  pupils    Pupil[]
  //start and end times are stored as minutes from midnight so 0 = 00:00, 60 = 01:00, 120 = 02:00 etc.
  startTime Int
  endTime   Int
  day       String

  @@index([teacherId])
}

model Pupil {
  id            String         @id @default(cuid())
  fName         String
  mName         String?
  lName         String
  dob           DateTime
  email         String?
  phone         String?
  extraNeeds    String?
  addressLine1  String?
  addressLine2  String?
  postcode      String?
  Lessons       Lesson[]
  tasterLessons TasterLesson[]
  enrolled      DateTime?
  droppedOut    DateTime?
  paymentType   String?
  Parent        Parent?        @relation(fields: [parentId], references: [id])
  parentId      String?
  Attendance    Attendance[]

  @@index([parentId])
}

model Parent {
  id           String  @id @default(cuid())
  fName        String
  lName        String
  email        String
  phone        String
  Pupil        Pupil[]
  addressLine1 String
  addressLine2 String
  postcode     String
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Instrument {
  id       String    @id @default(cuid())
  teachers Teacher[]
  name     String
  courses  Course[]
  Lesson   Lesson[]
}

model Course {
  name         String     @id
  instrumentId String
  instrument   Instrument @relation(fields: [instrumentId], references: [id], onDelete: Cascade)

  @@index([instrumentId])
}

model Day {
  name        String   @id
  openingTime Int
  closingTime Int
  Lesson      Lesson[]
}

model Attendance {
  id       String @id @default(cuid())
  pupil    Pupil  @relation(fields: [pupilId], references: [id])
  pupilId  String
  lesson   Lesson @relation(fields: [lessonId], references: [id])
  lessonId String
  mark     String

  @@index([pupilId])
  @@index([lessonId])
}
